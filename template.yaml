AWSTemplateFormatVersion: '2010-09-09'

Resources:
  Function:
    Type: AWS::Lambda::Function
    Properties:
      Handler: src/app.handler
      Role: !GetAtt Role.Arn
      Code:
        S3Bucket: chuck-norris-translator
        S3Key: lambda-code/src.zip
      Runtime: python3.8
      Timeout: 90
      Layers:
        - arn:aws:lambda:us-west-2:791909314305:layer:tweepy-layer:2

  Role:
    Type: AWS::IAM::Role
    Properties:
      RoleName: chk-lambda-role
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
                - glue.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: chk-lambda-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: 
                  - "cloudwatch:*"
                  - "events:*"
                  - "iam:GetPolicy"
                  - "iam:GetPolicyVersion"
                  - "iam:GetRole"
                  - "iam:GetRolePolicy"
                  - "iam:ListAttachedRolePolicies"
                  - "iam:ListRolePolicies"
                  - "iam:ListRoles"
                  - "iam:PassRole"
                  - "kms:ListAliases"
                  - "lambda:*"
                  - "logs:*"
                  - "tag:GetResources"
                  - "s3:*"
                  - "secretsmanager:*"
                  - "comprehend:*"
                  - "glue:*"
                  - "ec2:*"
                  - "dynamodb:*"
                Resource: '*'
      MaxSessionDuration: 3600   

  ChkEventRule: 
    Type: AWS::Events::Rule
    Properties: 
      Description: "chk-translator"
      ScheduleExpression: "rate(6 hours)"
      State: "ENABLED"
      Targets: 
        - 
          Arn: 
            Fn::GetAtt: 
              - "Function"
              - "Arn"
          Id: "TargetFunctionV1"
          
  PermissionForEventsToInvokeLambda: 
    Type: AWS::Lambda::Permission
    Properties: 
      FunctionName: !Ref "Function"
      Action: "lambda:InvokeFunction"
      Principal: "events.amazonaws.com"
      SourceArn: 
        Fn::GetAtt: 
          - "ChkEventRule"
          - "Arn"

  